{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7001/api/post';\n  }\n  getAllPost() {\n    return this.http.get(this.baseUrl);\n  }\n  addPost(postInfo) {\n    postInfo.id = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post(this.baseUrl, postInfo);\n  }\n  likeUpdatePost(PostInfo) {\n    PostInfo.like += 1;\n    return this.http.put(this.baseUrl + '/' + PostInfo.id, PostInfo);\n  }\n  removePost(postInfo) {\n    return this.http.delete(this.baseUrl + '/' + postInfo.id);\n  }\n}\nPostService.ɵfac = function PostService_Factory(t) {\n  return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n};\nPostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostService,\n  factory: PostService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PostService","constructor","http","baseUrl","getAllPost","get","addPost","postInfo","id","post","likeUpdatePost","PostInfo","like","put","removePost","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\AmirHastor\\Lara\\src\\app\\Service\\post.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostInfo } from '../Models/post.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  baseUrl = 'https://localhost:7001/api/post';\n\n  constructor(private http: HttpClient) { }\n\n  getAllPost() : Observable<PostInfo[]>{\n    return this.http.get<PostInfo[]>(this.baseUrl);\n  }\n\n  addPost(postInfo : PostInfo) : Observable<PostInfo>{\n    postInfo.id = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post<PostInfo>(this.baseUrl, postInfo);\n  }\n\n  likeUpdatePost(PostInfo: PostInfo): Observable<PostInfo>{\n    PostInfo.like+=1;\n    return this.http.put<PostInfo>(this.baseUrl+ '/'+PostInfo.id, PostInfo);\n  }\n\n  removePost(postInfo: PostInfo): Observable<PostInfo>{\n    return this.http.delete<PostInfo>(this.baseUrl+ '/'+postInfo.id);\n  }\n  \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,iCAAiC;EAEH;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,OAAO,CAAC;EAChD;EAEAG,OAAOA,CAACC,QAAmB;IACzBA,QAAQ,CAACC,EAAE,GAAG,sCAAsC;IACpD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAW,IAAI,CAACN,OAAO,EAAEI,QAAQ,CAAC;EACzD;EAEAG,cAAcA,CAACC,QAAkB;IAC/BA,QAAQ,CAACC,IAAI,IAAE,CAAC;IAChB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAW,IAAI,CAACV,OAAO,GAAE,GAAG,GAACQ,QAAQ,CAACH,EAAE,EAAEG,QAAQ,CAAC;EACzE;EAEAG,UAAUA,CAACP,QAAkB;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAW,IAAI,CAACZ,OAAO,GAAE,GAAG,GAACI,QAAQ,CAACC,EAAE,CAAC;EAClE;;AAtBWR,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}