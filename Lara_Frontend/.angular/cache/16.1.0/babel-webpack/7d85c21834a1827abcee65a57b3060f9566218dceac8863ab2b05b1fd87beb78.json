{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MessageService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7001/api/Message';\n  }\n  getAllMessageInfo() {\n    return this.http.get(this.baseUrl);\n  }\n  addMessage(messageInfo) {\n    messageInfo.messageId = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post(this.baseUrl, messageInfo);\n  }\n}\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient));\n};\nMessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MessageService","constructor","http","baseUrl","getAllMessageInfo","get","addMessage","messageInfo","messageId","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\AmirHastor\\Lara\\src\\app\\Service\\message.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MessageInfo } from '../Models/message.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  baseUrl = 'https://localhost:7001/api/Message';\n\n  constructor(private http: HttpClient) { }\n\n  getAllMessageInfo() : Observable<MessageInfo[]>{\n    return this.http.get<MessageInfo[]>(this.baseUrl);\n  }\n  addMessage(messageInfo: MessageInfo) : Observable<MessageInfo>{\n    messageInfo.messageId = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post<MessageInfo>(this.baseUrl, messageInfo);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,oCAAoC;EAEN;EAExCC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAgB,IAAI,CAACF,OAAO,CAAC;EACnD;EACAG,UAAUA,CAACC,WAAwB;IACjCA,WAAW,CAACC,SAAS,GAAG,sCAAsC;IAC9D,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAc,IAAI,CAACN,OAAO,EAAEI,WAAW,CAAC;EAC/D;;AAZWP,cAAc,C;mBAAdA,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdb,cAAc,C;SAAdA,cAAc;EAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}