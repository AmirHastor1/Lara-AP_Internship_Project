{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequestService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7001/api/Request';\n  }\n  getAllRequestInfo() {\n    return this.http.get(this.baseUrl);\n  }\n  addRequest(friendRequestInfo) {\n    friendRequestInfo.id = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post(this.baseUrl, friendRequestInfo);\n  }\n  removeRequest(friendRequestInfo) {\n    return this.http.delete(this.baseUrl + '/' + friendRequestInfo.id);\n  }\n}\nRequestService.ɵfac = function RequestService_Factory(t) {\n  return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n};\nRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RequestService,\n  factory: RequestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["RequestService","constructor","http","baseUrl","getAllRequestInfo","get","addRequest","friendRequestInfo","id","post","removeRequest","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\AmirHastor\\Lara\\src\\app\\Service\\request.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FriendRequestInfo } from '../Models/friendRequest.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  baseUrl = 'https://localhost:7001/api/Request';\n\n  constructor(private http: HttpClient) { }\n\n  getAllRequestInfo() : Observable<FriendRequestInfo[]>{\n    return this.http.get<FriendRequestInfo[]>(this.baseUrl);\n  }\n\n  addRequest(friendRequestInfo : FriendRequestInfo) : Observable<FriendRequestInfo>{\n    friendRequestInfo.id = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post<FriendRequestInfo>(this.baseUrl, friendRequestInfo);\n  }\n\n  removeRequest(friendRequestInfo: FriendRequestInfo): Observable<FriendRequestInfo>{\n    return this.http.delete<FriendRequestInfo>(this.baseUrl+ '/'+friendRequestInfo.id);\n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,oCAAoC;EAEN;EAExCC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAsB,IAAI,CAACF,OAAO,CAAC;EACzD;EAEAG,UAAUA,CAACC,iBAAqC;IAC9CA,iBAAiB,CAACC,EAAE,GAAG,sCAAsC;IAC7D,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAoB,IAAI,CAACN,OAAO,EAAEI,iBAAiB,CAAC;EAC3E;EAEAG,aAAaA,CAACH,iBAAoC;IAChD,OAAO,IAAI,CAACL,IAAI,CAACS,MAAM,CAAoB,IAAI,CAACR,OAAO,GAAE,GAAG,GAACI,iBAAiB,CAACC,EAAE,CAAC;EACpF;;AAjBWR,cAAc,C;mBAAdA,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdf,cAAc,C;SAAdA,cAAc;EAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}