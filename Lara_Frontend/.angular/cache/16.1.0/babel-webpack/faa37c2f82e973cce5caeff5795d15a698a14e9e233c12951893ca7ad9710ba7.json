{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7001/api/Login';\n  }\n  getAllLoginInfo() {\n    return this.http.get(this.baseUrl);\n  }\n  addUser(loginInfo) {\n    loginInfo.id = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post(this.baseUrl, loginInfo);\n  }\n  getSingleLoginInfo(id) {\n    return this.http.get(this.baseUrl + '/' + id);\n  }\n  deleteUser(id) {\n    return this.http.delete(this.baseUrl + '/' + id);\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoginService","constructor","http","baseUrl","getAllLoginInfo","get","addUser","loginInfo","id","post","getSingleLoginInfo","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\AmirHastor\\Lara\\src\\app\\Service\\Login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginInfo } from '../Models/login.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  baseUrl = 'https://localhost:7001/api/Login';\n  \n  constructor(private http: HttpClient) { }\n\n  getAllLoginInfo() : Observable<LoginInfo[]>{\n    return this.http.get<LoginInfo[]>(this.baseUrl);\n  }\n\n  addUser(loginInfo: LoginInfo) : Observable<LoginInfo>{\n    loginInfo.id = \"00000000-0000-0000-0000-000000000000\";\n    return this.http.post<LoginInfo>(this.baseUrl, loginInfo);\n  }\n\n  getSingleLoginInfo(id: string):Observable<LoginInfo>{\n    return this.http.get<LoginInfo>(this.baseUrl +'/'+ id);\n  }\n\n  deleteUser (id:string) : Observable<LoginInfo>{\n    return this.http.delete<LoginInfo>(this.baseUrl +'/'+ id);\n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,kCAAkC;EAEJ;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,OAAO,CAAC;EACjD;EAEAG,OAAOA,CAACC,SAAoB;IAC1BA,SAAS,CAACC,EAAE,GAAG,sCAAsC;IACrD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAY,IAAI,CAACN,OAAO,EAAEI,SAAS,CAAC;EAC3D;EAEAG,kBAAkBA,CAACF,EAAU;IAC3B,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,OAAO,GAAE,GAAG,GAAEK,EAAE,CAAC;EACxD;EAEAG,UAAUA,CAAEH,EAAS;IACnB,OAAO,IAAI,CAACN,IAAI,CAACU,MAAM,CAAY,IAAI,CAACT,OAAO,GAAE,GAAG,GAAEK,EAAE,CAAC;EAC3D;;AArBWR,YAAY,C;mBAAZA,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZhB,YAAY,C;SAAZA,YAAY;EAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}